{"version":3,"sources":["SessionDescriptions.js","App.js","serviceWorker.js","index.js"],"names":["SessionDescriptions","props","session","CharacterPortrait","key","name","className","sm","xs","href","onClick","src","img","alt","shuffleArray","array","array2","slice","i","length","j","Math","floor","random","temp","CharacterPortraitGrid","grid","characters","map","character","e","CharacterCard","Body","desc","rounded","icon","faTimes","size","Session","noGutters","number","SessionsList","sessions","SessionsPane","state","current","this","setState","title","handleClick","handleReturnClick","React","Component","App","currentCharacter","data","coverImg","subtitle","copy","characterListTitle","sessionsListTitle","author","authorEmail","testVar","preventDefault","dangerouslySetInnerHTML","__html","id","handleCardCloseClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44ad1089.chunk.js","sourcesContent":["import React from 'react';\n\nfunction SessionDescriptions(props) {\n  if (props.session === 1) {\n    return (\n      <div>\n        <p>It's a bright, sunny, breezy day on the sword coast. It's midmorning, and a trio of travelers are sitting around a cooking fire, with a loaded ox-driven wagon a short distance away. Chappy Quickstep, a halfling in conspicuously new travel leathers, is taking freshly cooked food off the fire. Bounty of Nonsense, a tabaxi in fancy clothing, is reclining prone on his back. And Friendly, a firbolg in simple homespun, is sitting down, munching oats and occasionally offering some to his cow companion. Bount and Friendly chat happily, while Chappy grouses both about wanting to get this job over with and having to endure the gentle teasing of the other two. Eventually the three decide to pack up and move on, Friendly conscientiously ensuring she and her \"new friends\" leave no trace. They are traveling south down the High Road from Neverwinter to parts south, en route to the frontier town of Phandalin on a job to deliver some supplies for a dwarf named Gundren Rockseeker and a human named Silder Hallwinter. They are about half a day out from their destination.</p>\n        <p>Heading north on that same high road are two horses, slowly ambling their way along the road. Riding the horses are the tiefling Nyoma Izarren, dressed in teal and gray, and the dragonborn Prexijandilin Pandjet, sporting shining heavy armor and a visibly-displayed shield. Nyoma enthusiastically tries to draw Pandjet into conversation, though as in the previous days of their journey he continues to be relatively taciturn. They have been traveling for weeks, journeying up from the region of Candlekeep and Baldur's Gate on errands toward Phandelin. They have already had their fair share of trouble and unusual events on the road. About midday, they turn eastward onto the Triboar trail which will take them to their rough and tumble destination. The road becomes twisty, and begins to climb into hills that will eventually rise to form the Sword Mountains. Shortly after taking the turn, Pandjet and Nyoma notice a wagon just a short way behind them, moving in the same direction at roughly the same speed. The duo on horseback and the trio on the wagon share genial waves at a distance from each other. Their journey proceeds like this for an hour or so, before they turn a corner and are confronted with the unmistakable sight of two dead horses a hundred yards up the trail.</p>\n        <p>The duo halt their horses and study the scene. A ways up the road, the trail narrows with two sharp escarpments topped with trees leaning in on both sides. The two dead horses are laid out on the tightest part of the path, decorated with numerous arrows apiece. Squinting ahead, Pandjet is able to pick out several figures only slightly hidden among the trees of the ridges. Nyoma suggests they wait for the wagon behind, to potentially have a bit more support for what lies ahead. Pandjet is concerned as to what those behind could want, but they agree to wait. The trio in the wagon approaches, and friendly greetings are shared on both sides. Friendly and friends seem more than willing to help navigate the (only slightly) hidden lurkers ahead, and the five together travel forward, with the wagon taking the lead. Bount climbs the escarpment on the left side and begins shadowing the main group as they proceed, taking cover in the underbrush.</p>\n        <p>Approaching the narrow point of the path, the three in the wagon and the two on horseback are met by a collection of goblins in simple brown and white uniforms, each with what looks like a shoulder patch insignia of a pair of jaws with sharp, jagged teeth. One goblin in particular, a woman with an abrasive personality and eyes that dart from place to place (who the party will later learn is named Clash), approaches the group and serves as the representative for the others hiding among the trees. She demands the group's traveling papers. An argument ensues in which various characters express incredulity about any need for papers and question exactly where these goblins came from. Clash informs them they are soldiers in the Cragmaw Auxiliary, a military force invited to the area by \"responsible authorities\" to assert law and order on this \"backwards and chaotic\" region. Nyoma tries to talk reason with the goblins, Friendly confusedly mocks them for their demands, and Chappy seems baffled about the goblin's literateness. The argument increases swiftly in tension, without any progress being made.</p>\n        <p>While the rest of the group argues with the Cragmaw soldiers, Bount ascends a tree near the narrow point, where a goblin has taken up a post among the branches with a shortbow trained on the individuals below. Moving swiftly as a breeze, the tabaxi is able to place himself directly behind the solder in the tree, and he claps his hand over the goblin's mouth while threatening aggressively with the guard of his sword. Bounty hisses, \"I will end you unless you stop your friends down there – right now. Drop your weapon.\" The soldier dutifully nods agreement, and drops his weapon. Unfortunately, as they are in a tree, this produces an awful racket as the bow and arrows clatter noisily from branch to branch on their way to the ground. Clash orders the remaining goblins to attack! A noisy confusing melee results. By the time the dust clears, Bount has knocked the goblin in the tree out and to the ground with the guard of his sword, Chappy has strummed sorcerous chords on her lute to lull two of the soldiers into unconsciousness, and a combination of vines summoned by Friendly and a threatened burst of sidereal energy held in the hand of Nyoma force Clash to surrender on behalf of her troops, given she is the only one remaining conscious.</p>\n        <p>With some hesitation, Clash agrees to tell the party anything they want to know. She informs them she is the sergeant of this group of goblins, and they were provided orders to specifically detain Gundren Rockseeker and Sildar Hallwinter and hand them over to someone known as the \"Black Spider.\" Her last understanding was that they had been taken to the local unit encampment, located in a cave five miles northwest, shortly to be moved to their company headquarters at Cragmaw Castle north of Phandelin inside Neverwinter Wood. After some additional questioning, she also reveals the presence of traps along the route. Bount rifles through her pockets discretely, and comes up with a crude handwritten map which he secrets away from the other characters. Friendly forces her to write them authorized travel papers to hopefully avoid this situation again. The five then debate whether or not to travel to the cave HQ or to Phandelin. Pandjet initially seems hesitant, but is convinced by Nyoma and the others to attempt to rescue the hostages. The group sets out northwest.</p>\n        <p>Despite his initial hesitation about the detour, Pandjet confidently takes point and leads the group through the briar patches and copses of trees on the way to their destination. While they travel this way, Bount shows Friendly the map he found, and specifically the worrying room on the map marked \"The Weapon.\" Friendly is less subtle about the secret map than the tabaxi would otherwise like. Unfortunately for Pandjet, for his assertiveness he is paid back by being caught in a snare trap two miles into the hike, though thankfully he ends up unharmed. After this and a comment by Bounty of Nonsense that he has some experience with traps, the others side-eye Bount into taking point. A short while later, he trips the second and final expected hazard, a pit trap, but his agility allows him to sidestep actually being caught in it.</p>\n        <p>Shortly after, the five reach a sharply ascending hill with a large opening, with two large banners bearing the Cragmaw emblem on them. Out of the opening flows a narrow shallow stream. Here the group encounters two goblin soldiers standing guard - they yell \"Who goes there!\" in the midst of the group's debating on a plan of action. Thinking on her feet, Friendly responds they have arrived to take the prisoners to the Black Spider. The guards seem confused, as one of the prisoners has already been transferred! But the group is able to soothe things over and win the trust of the guards. One of the guards escorts them to meet with Yenniw, the corporal and superior officer of this Auxiliary Unit. As they snake their way inside, bordering the stream and climbing a number of stairs as the cave ascends inside the hill, Bounty of Nonsense trails behind. He spots a small set of stairs leading up into the room marked on the map as holding the Weapon, and his curiosity gets the better of him. He blusters and bluffs about needing to check that the entire Unit operations are in ship-shape, and the rest of the group moves on without him, heading around and over a bridge spanning the stream into the large relatively comfortable quarters of the goblins.</p>\n        <p>The remaining four encounter Yenniw in the large, warm, and well-lit living space of the goblins. He is seated at his desk on an upper level of the room, furiously scribbling away at papers. Yenniw has a slick, mean grin on his face and is generally corpulent. They also spot a prone unmoving human-sized figure half-hidden behind a stalagmite, also on the upper level. Friendly takes the lead and reasserts to Yenniw that the group is here to take the prisoner to the Black Spider. The corporal seems quite surprised at this, and replies that he was not aware of any prisoner transfer taking place. Friendly bluffs that there must be something seriously amiss if the Spider is issuing orders through Clash now rather than Yenniw, and that it would be in the corporal's best interest not to anger their shared superior further. Yenniw studies them for a while, but it is not long before his standard sly grin returns to his face. He returns to the group, gripping the edges of his desk with his fingers (moving his finger to press a button on the underside unnoticed by anyone), and informs the group that he will help them out by letting them take the prisoner, if they help him out by doing a routine check on \"the Weapon's containment system.\" Chappy puts on a show of acting baffled, asking Yenniw, \"Do you think this is FUN for us? Just let us do our damn job!\" After some more back and forth, he agrees to let them take the prisoner – Sildar Hallwinter, as it turns out – with them on their way to check the containment system. Everyone agrees to this plan.</p>\n        <p>Meanwhile, Bount spends some time making the acquaintance of the guard stationed at the door to the room where the Weapon is supposed to be located. She gives him some ominous sounding instructions, including maintaining a five foot distance, which he readily agrees to before cautiously stepping inside. The room is quite large, and dark to boot. Creeping forward into the dim chamber, Bounty of Nonsense approaches quite close to what turns out to be a large metal cage. Inside the cage is a forlorn-looking wolf pressed against the floor, growling low. But more importantly, also lurking inside is an eight foot tall powerfully-built hairy creature. It is standing upright and leaning forward menacingly, breathing raggedly and with intense glowing red eyes fixed directly on the tabaxi. Bount's mouth falls open, trying to make sense of the scene. But as he takes it all in, a loud metallic click sounds through the room, and a series of gears begin turning. The last of these gears whirrs as it unlocks and swings open the main front door of the cage. The thing inside exhales a low rumbled moan, while the wolf's growl increases in intensity. With a surprisingly smoothness and quietness, the creature that is apparently the weapon lifts a javelin lying nearby the cage and hurls it at Bount before lumbering out of the cage toward him. The tabaxi uses every ounce of his feline reflexes to flee headlong out the room, yelling to the previously chatty goblin guard to run for her life, the weapon has escaped!</p>\n        <p>The rest of the group is emerging from the goblin quarters to the bridge over the stream. Sildar was initially confused and hostile toward the seeming allies of the goblins, but Chappy and Nyoma healed and helped the man, and did their best to communicate silently to him that this was a rescue attempt. Yet as the four of them emerge onto the bridge, they encounter Bounty running as fast as he can the other way. \"The weapon is a living weapon and it's escaped and we need to leave NOW!\" Bount yells, with both the wolf and the creature hot on his heels behind. What comes next is absolute madness, with goblins from the chambers next to the weapon's screaming and fleeing in all directions, and the party trying to get everyone down from the bridge while holding off the wolf and the weapon, both intent on mauling anyone in their path. The weapon skewers Bount with a javelin and he falls unconscious, but is brought back to consciousness by Nyoma. Pandjet moves to protect the others, blocking off the far side of the bridge after Bount flees and Friendly jumps down to the lower level. Pandjet's steadfastness proves true, allowing him to hold the line despite suffering the sharp gnashing jaws of the wolf. Friendly with her eight foot stature is able to help the rest down from the bridge. Finally Pandjet jumps as well, and the group, now six with rescued hostage Sildar Hallweather in tow, is able to flee at pace out of the cave. They collect their wagon and horses, and safely hightail it away from the scene with the Cragmaw goblins still in total disarray.</p>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default SessionDescriptions;","import React from 'react';\nimport SessionDescriptions from './SessionDescriptions.js';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Media from 'react-bootstrap/Media';\nimport Row from 'react-bootstrap/Row';\nimport ScrollableAnchor from 'react-scrollable-anchor'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport data from './data.json';\nimport './App.css';\n\nfunction CharacterPortrait(props) {\n  return (\n    <Col key={props.name} className=\"character-portrait-container\" sm={4} xs={6}>\n      <a href=\"#card\" onClick={props.onClick}>\n        <Image src={props.img} className=\"character-portrait img-shadow\" alt={props.name} />\n      </a>\n      <a href=\"#card\" onClick={props.onClick} className=\"character-portrait-name text-info\">{props.name}</a>\n    </Col>\n  );\n}\n\nfunction shuffleArray(array) {\n  const array2 = array.slice();\n  let i = array2.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array2[i];\n    array2[i] = array2[j];\n    array2[j] = temp;\n  }\n  return array2;\n}\n\nfunction CharacterPortraitGrid(props) {\n  let grid = props.characters.map((character, i) => {\n    return (\n      <CharacterPortrait key={character.name}\n        name={character.name}\n        img={character.img}\n        onClick={(e) => props.onClick(i, e)}\n      />\n    );\n  });\n\n  return (\n    <Row className=\"justify-content-center character-portrait-grid\">\n      {grid}\n    </Row>\n  );\n}\n\nfunction CharacterCard(props) {\n  if (!props.character) {\n    return null;\n  }\n\n  return (\n    <Row className=\"justify-content-center media-container\">\n      <Col xs={11}>\n      <Media className=\"\">\n            <Media.Body className=\"align-self-center\">\n              <h5>{props.character.name}</h5>\n              <p>{props.character.desc}</p>\n            </Media.Body>\n            <Image\n              className=\"align-self-center media-image\"\n              src={props.character.img}\n              alt={props.character.name}\n              rounded\n            />\n      </Media>\n      </Col>\n      <Col xs={0.5} className=\"icon-container\">\n      <FontAwesomeIcon icon={faTimes} size=\"lg\" onClick={props.onClick} />\n      </Col>\n    </Row>\n  );\n}\n\nfunction Session(props) {\n  return (\n    <div className=\"session\">\n      <Row className=\"justify-content-center\">\n        <h4>\n          {props.session.name}\n        </h4>\n      </Row>\n      <Row className=\"justify-content-center\">\n        <a className=\"return-link\" href=\"#session\" onClick={props.onClick}>Return To List of Sessions</a>\n      </Row>\n      <Row className=\"justify-content-center\" noGutters>\n        <SessionDescriptions session={props.session.number} />\n      </Row>\n    </div>\n  );\n}\n\nfunction SessionsList(props) {\n  let sessions = props.sessions.map((session, i) => {\n    return (\n      <Row key={i} className='justify-content-center'>\n        <a className=\"text-info\" href=\"#session\" onClick={(e) => props.onClick(i, e)}>{session.name}</a>\n      </Row>\n    );\n  });\n\n  return (\n    <div>\n      {sessions}\n    </div>\n  );\n}\n\nclass SessionsPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: null,\n    }\n  }\n\n  handleClick(i, e) {\n    // e.preventDefault();\n    this.setState({\n      current: i,\n    });\n  }\n\n  handleReturnClick(e) {\n    // e.preventDefault();\n    this.setState({\n      current: null,\n    });\n  }\n\n  render() {\n    if (this.state.current === null) {\n      return(\n        <div>\n          <Row className=\"justify-content-center\">\n            <h4>\n              {this.props.title}\n            </h4>\n          </Row>\n          <SessionsList \n            sessions={this.props.sessions}\n            onClick={(i, e) => this.handleClick(i, e)} \n          />\n        </div>\n      );  \n    } else {\n      return (\n        <div>\n          <Session session={this.props.sessions[this.state.current]} onClick={(e) => this.handleReturnClick(e)}  />\n        </div>\n      );\n    }\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentCharacter: null,\n      characters: shuffleArray(data.characters),\n      sessions: data.sessions,\n      coverImg: data.coverImg,\n      title: data.title,\n      subtitle: data.subtitle,\n      copy: data.copy,\n      characterListTitle: data.characterListTitle,\n      sessionsListTitle: data.sessionsListTitle,\n      author: data.author,\n      authorEmail: data.authorEmail,\n      testVar: \"\",\n    }\n  }\n\n  handleClick(i, e) {\n    this.setState({\n      currentCharacter: this.state.characters[i],\n    });\n  }\n\n  handleCardCloseClick(e) {\n    e.preventDefault();\n    this.setState({\n      currentCharacter: null,\n    });\n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <Row className=\"justify-content-center App-header\">\n          <Image src={this.state.coverImg} className=\"App-logo img-shadow\" alt=\"logo\" />\n        </Row>\n        <Row className=\"justify-content-center top-spacing\" noGutters>\n          <h2 className=\"title\">\n            {this.state.title}\n          </h2>\n        </Row>\n        <Row className=\"justify-content-center\" noGutters>\n          <h5 className=\"subtitle\">\n            {this.state.subtitle}\n          </h5>\n        </Row>\n        <Row className=\"justify-content-center top-spacing\" noGutters>\n          <p dangerouslySetInnerHTML={{__html: this.state.copy}} />\n        </Row>\n        <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n\n        <Row className=\"justify-content-center\">\n          <h4>\n            {this.state.characterListTitle}\n          </h4>\n        </Row>\n        <CharacterPortraitGrid \n          characters={this.state.characters} \n          onClick={(i, e) => this.handleClick(i, e)}\n        />\n        <ScrollableAnchor id={'card'}>\n          <Row className=\"justify-content-center top-spacing bottom-spacing\">\n            <CharacterCard \n              character={this.state.currentCharacter} \n              onClick={(e) => this.handleCardCloseClick(e)} \n            />\n          </Row>\n        </ScrollableAnchor>\n\n        <ScrollableAnchor id={'session'}>\n          <Row className=\"justify-content-center middle-divider\" noGutters></Row>\n        </ScrollableAnchor>\n        \n        <SessionsPane sessions={this.state.sessions} title={this.state.sessionsListTitle} />\n\n        <Row className=\"justify-content-center bottom-divider\" noGutters></Row>\n        <Row className=\"footer justify-content-center\">\n          <Col>\n            <span>\n              {this.state.author}\n            </span>\n          </Col>\n          <Col>\n            <span>\n              {this.state.authorEmail}\n            </span>\n          </Col>\n        </Row>  \n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}